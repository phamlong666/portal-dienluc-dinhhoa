import streamlit as st
import pandas as pd
import matplotlib.pyplot as plt

st.set_page_config(layout="wide", page_title="Ph√¢n t√≠ch t·ªïn th·∫•t TBA c√¥ng c·ªông")
st.title("üìä Ph√¢n t√≠ch t·ªïn th·∫•t c√°c TBA c√¥ng c·ªông")

# Dummy dataframe t·∫°m ƒë·ªÉ tr√°nh l·ªói (anh thay b·∫±ng d·ªØ li·ªáu th·ª±c t·∫ø sau)
data = {
    "T√™n TBA": ["TBA 1", "TBA 2", "TBA 3", "TBA 4", "TBA 5", "TBA 6"],
    "K·ª≥": ["Th·ª±c hi·ªán", "Th·ª±c hi·ªán", "C√πng k·ª≥", "C√πng k·ª≥", "Th·ª±c hi·ªán", "C√πng k·ª≥"],
    "T·ª∑ l·ªá t·ªïn th·∫•t": [1.5, 2.8, 3.5, 4.2, 5.1, 6.3]
}
df = pd.DataFrame(data)

if not df.empty and "T·ª∑ l·ªá t·ªïn th·∫•t" in df.columns:
    def classify_nguong(x):
        if x < 2: return "<2%"
        elif 2 <= x < 3: return ">=2 v√† <3%"
        elif 3 <= x < 4: return ">=3 v√† <4%"
        elif 4 <= x < 5: return ">=4 v√† <5%"
        elif 5 <= x < 7: return ">=5 v√† <7%"
        else: return ">=7%"
    df["Ng∆∞·ª°ng t·ªïn th·∫•t"] = df["T·ª∑ l·ªá t·ªïn th·∫•t"].apply(classify_nguong)

    df_unique = df.drop_duplicates(subset=["T√™n TBA", "K·ª≥"])
    count_df = df_unique.groupby(["Ng∆∞·ª°ng t·ªïn th·∫•t", "K·ª≥"]).size().reset_index(name="S·ªë l∆∞·ª£ng")
    pivot_df = count_df.pivot(index="Ng∆∞·ª°ng t·ªïn th·∫•t", columns="K·ª≥", values="S·ªë l∆∞·ª£ng").fillna(0).astype(int)

    df_latest = df_unique[df_unique['K·ª≥'] == 'Th·ª±c hi·ªán']
    pie_data = df_latest["Ng∆∞·ª°ng t·ªïn th·∫•t"].value_counts().reindex(pivot_df.index, fill_value=0)

    fig, (ax_bar, ax_pie) = plt.subplots(1, 2, figsize=(12, 5), dpi=300)

    x = range(len(pivot_df))
    width = 0.35
    colors = ['#1f77b4', '#ff7f0e', '#2ca02c', '#d62728']
    for i, col in enumerate(pivot_df.columns):
        offset = (i - (len(pivot_df.columns)-1)/2) * width
        ax_bar.bar([xi + offset for xi in x], pivot_df[col], width, label=col, color=colors[i % len(colors)])

    ax_bar.set_ylabel("S·ªë l∆∞·ª£ng", fontsize=8)
    ax_bar.set_title("S·ªë l∆∞·ª£ng TBA theo ng∆∞·ª°ng t·ªïn th·∫•t", fontsize=10, weight='bold')
    ax_bar.set_xticks(list(x))
    ax_bar.set_xticklabels(pivot_df.index, fontsize=7)
    ax_bar.legend(title="K·ª≥", fontsize=6)
    ax_bar.grid(axis='y', linestyle='--', linewidth=0.5)

    wedges, texts, autotexts = ax_pie.pie(
        pie_data,
        labels=pivot_df.index,
        autopct='%1.1f%%',
        startangle=90,
        colors=colors,
        pctdistance=0.75,
        wedgeprops={'width': 0.3, 'edgecolor': 'w'}
    )

    for autotext in autotexts:
        autotext.set_color('black')
        autotext.set_fontsize(6)

    ax_pie.text(0, 0, f"T·ªïng s·ªë TBA\n{pie_data.sum()}", ha='center', va='center', fontsize=8, fontweight='bold', color='black')
    ax_pie.set_title("T·ª∑ tr·ªçng TBA theo ng∆∞·ª°ng t·ªïn th·∫•t", fontsize=10, weight='bold')

    st.pyplot(fig)

    nguong_options = ["(All)", "<2%", ">=2 v√† <3%", ">=3 v√† <4%", ">=4 v√† <5%", ">=5 v√† <7%", ">=7%"]
    nguong_filter = st.selectbox("Ch·ªçn ng∆∞·ª°ng ƒë·ªÉ l·ªçc danh s√°ch TBA", nguong_options)
    if nguong_filter != "(All)":
        df_filtered = df[df["Ng∆∞·ª°ng t·ªïn th·∫•t"] == nguong_filter]
    else:
        df_filtered = df

    st.markdown("### üìã Danh s√°ch chi ti·∫øt TBA")
    st.dataframe(df_filtered.reset_index(drop=True), use_container_width=True)
else:
    st.warning("Kh√¥ng c√≥ d·ªØ li·ªáu ph√π h·ª£p ƒë·ªÉ hi·ªÉn th·ªã bi·ªÉu ƒë·ªì.")
